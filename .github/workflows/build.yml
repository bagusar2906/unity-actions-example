name: Build Unity ProjectðŸ§ª

#####################################################################################
# Please be mindful when running this workflow, as it spins up quite a few runners. #
#####################################################################################

on:
  workflow_dispatch: 
    inputs:
      targetPlatform:
        description: 'Target Platform'
        required: true
        default: 'WebGL'
        type: choice
        options:
          - WebGL
          - StandaloneWindows64
          - StandaloneLinux64
      runsOnServer:
        description: 'Runner Server'
        required: true
        default: 'self-hosted'
        type: choice
        options:
          - self-hosted
          - ubuntu-latest
          - windows-2019

jobs:
  checklicense:
    name: Check for UNITY_LICENSE in GitHub Secrets
    runs-on: ${{ inputs.runsOnServer }} 
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        run: |
            echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
            export is_unity_license_set="${{ env.UNITY_LICENSE != '' }}"
            echo "is_unity_license_set=$is_unity_license_set" >> $GITHUB_OUTPUT

  activation:
    needs: checklicense
    if: needs.checklicense.outputs.is_unity_license_set == 'false'
    name: Request manual activation file ðŸ”‘
    runs-on: ${{ inputs.runsOnServer }} 
    steps:
      # Request manual activation file
      - name: Request manual activation file
        id: getManualLicenseFile
        uses: game-ci/unity-request-activation-file@v2
      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - name: Expose as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  test:
    needs: checklicense
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    name: Run all tests âœ¨
    runs-on: ${{ inputs.runsOnServer }} 
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-test
      - uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      #  with:
      #    githubToken: ${{ secrets.ACCESS_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildForAllSupportedPlatforms:
    needs: test
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ${{ inputs.runsOnServer }} 
    strategy:
            fail-fast: false
            matrix:
                targetPlatform: 
                 - ${{ inputs.targetPlatform }} 
                
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Test
  #     - name: Run tests
  #      uses: game-ci/unity-test-runner@v4
  #      env:
  #        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #      with:
  #       githubToken: ${{ secrets.ACCESS_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: BuildBuild-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
